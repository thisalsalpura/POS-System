/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import model.MySQL;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.LoggerUtils;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import raven.toast.Notifications;

/**
 *
 * @author User
 */
public class Reports extends javax.swing.JFrame {

    private static Home home = new Home();
    private static Logger logger = LoggerUtils.getLogger();

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        this.setExtendedState(Home.MAXIMIZED_BOTH);
        init();
        styleTheTextFieldsAndButtons();

        // set notification position
        Notifications.getInstance();

        // add a icon image
        Image image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/resources/icon.png"));
        this.setIconImage(image);
    }

    // style the text fields and buttons
    private void styleTheTextFieldsAndButtons() {
        jTextField1.putClientProperty("JComponent.roundRect", true);
        jTextField1.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter Employee Email");
        jTextField1.putClientProperty(FlatClientProperties.STYLE, "margin:0, 20, 0, 20");

        jTextField2.putClientProperty("JComponent.roundRect", true);
        jTextField2.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter Supplier Email");
        jTextField2.putClientProperty(FlatClientProperties.STYLE, "margin:0, 20, 0, 20");

        jButton1.putClientProperty("JButton.buttonType", "roundRect");
        jButton3.putClientProperty("JButton.buttonType", "roundRect");
        jButton4.putClientProperty("JButton.buttonType", "roundRect");
        jButton5.putClientProperty("JButton.buttonType", "roundRect");
    }

    private void init() {
        // icons, logos & images load
        FlatSVGIcon back = new FlatSVGIcon("resources//backTo.svg", 38, 34);
        back_label1.setIcon(back);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        backLogo1 = new javax.swing.JPanel();
        back_label1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel5.setPreferredSize(new java.awt.Dimension(1260, 750));

        backLogo1.setBackground(new java.awt.Color(121, 203, 96));
        backLogo1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));
        backLogo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backLogo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLogo1backToHome(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Back");

        javax.swing.GroupLayout backLogo1Layout = new javax.swing.GroupLayout(backLogo1);
        backLogo1.setLayout(backLogo1Layout);
        backLogo1Layout.setHorizontalGroup(
            backLogo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backLogo1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(back_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        backLogo1Layout.setVerticalGroup(
            backLogo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
            .addComponent(back_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel14.setBackground(new java.awt.Color(121, 203, 96));
        jLabel14.setFont(new java.awt.Font("Retro Signed", 0, 81)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("REPORTS");
        jLabel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));
        jLabel14.setOpaque(true);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(121, 203, 96), 3, true));

        jLabel1.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText(" Get Stock Report :-");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));

        jButton1.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Get Report");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText(" Get Employee Details Report :-");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));

        jButton3.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Get Report");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText(" Get Supplier Details Report :-");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));

        jTextField2.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 18)); // NOI18N

        jButton4.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Get Report");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText(" Get Sales Report :-");
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 229, 255), 3, true));

        jButton5.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("Get Report");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        jPanel3.setBackground(new java.awt.Color(121, 203, 96));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(121, 203, 96));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1182, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(backLogo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(backLogo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jScrollPane1.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backLogo1backToHome(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLogo1backToHome
        // back to home
        reset();
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_backLogo1backToHome

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // get stock report
        try {

            String path = "src//reports//Bubble_Bay_Stock_Report.jasper";

            Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
            String stockDate = sdf.format(date);

            Connection connection = MySQL.getConnection();

            JasperPrint report = JasperFillManager.fillReport(path, null, connection);

            JasperViewer viewer = new JasperViewer(report, false);

            viewer.setBounds(2, 20, 800, 500);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);

            String folderPath = "reports//Stock_Reports//";
            String fileName = folderPath + stockDate + "_stock_report.pdf";

            JasperExportManager.exportReportToPdfFile(report, fileName);

        } catch (Exception e) {
            e.printStackTrace();
            logger.log(Level.WARNING, "Report Generating Error!", e);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // get employee detail report
        String email = jTextField1.getText();

        if (email.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_RIGHT, 3500l, "Please enter the Employee Email Address!");
        } else {

            try {

                ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `employee` WHERE `email` = '" + email + "'");

                if (resultSet.next()) {

                    String path = "src//reports//Bubble_Bay_Employee_Report.jasper";

                    HashMap<String, Object> params = new HashMap<>();
                    params.put("Parameter1", email);

                    Connection connection = MySQL.getConnection();

                    JasperPrint report = JasperFillManager.fillReport(path, params, connection);

                    JasperViewer viewer = new JasperViewer(report, false);

                    viewer.setBounds(2, 20, 800, 500);
                    viewer.setLocationRelativeTo(null);

                    viewer.setVisible(true);

                    String folderPath = "reports//Employee_Reports//";
                    String fileName = folderPath + email + "_details.pdf";

                    JasperExportManager.exportReportToPdfFile(report, fileName);
                    
                    jTextField1.setText("");

                } else {
                    Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_RIGHT, 3500l, "Invalid Employee Email Address!");
                }

            } catch (SQLException e) {
                e.printStackTrace();
                logger.log(Level.WARNING, "Report Generating Error!", e);
            } catch (Exception e) {
                e.printStackTrace();
                logger.log(Level.WARNING, "Report Generating Error!", e);
            }

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        // get employee detail report
        String email = jTextField2.getText();

        if (email.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_RIGHT, 3500l, "Please enter the Supplier Email Address!");
        } else {

            try {

                ResultSet resultSet = MySQL.executeSearch("SELECT * FROM `supplier` WHERE `email` = '" + email + "'");

                if (resultSet.next()) {

                    String path = "src//reports//Bubble_Bay_Supplier_Report.jasper";

                    HashMap<String, Object> params = new HashMap<>();
                    params.put("Parameter1", email);

                    Connection connection = MySQL.getConnection();

                    JasperPrint report = JasperFillManager.fillReport(path, params, connection);

                    JasperViewer viewer = new JasperViewer(report, false);

                    viewer.setBounds(2, 20, 800, 500);
                    viewer.setLocationRelativeTo(null);

                    viewer.setVisible(true);

                    String folderPath = "reports//Supplier_Reports//";
                    String fileName = folderPath + email + "_details.pdf";

                    JasperExportManager.exportReportToPdfFile(report, fileName);
                    
                    jTextField2.setText("");

                } else {
                    Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_RIGHT, 3500l, "Invalid Supplier Email Address!");
                }

            } catch (SQLException e) {
                e.printStackTrace();
                logger.log(Level.WARNING, "Report Generating Error!", e);
            } catch (Exception e) {
                e.printStackTrace();
                logger.log(Level.WARNING, "Report Generating Error!", e);
            }

        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        // get sales details report
        try {

            String todayMostSellingProduct = "empty";
            String monthlyMostSellingProduct = "empty";
            String todayEarning = "0.0";
            String monthlyEarning = "0.0";
            String mostActiveCustomer = "empty";

            Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            String formattedTodayDate = sdf.format(date);

            ResultSet resultSet = MySQL.executeSearch("SELECT `name`, `product_id`, SUM(`qty`) AS `total_sold` FROM `invoice_item` "
                    + "INNER JOIN `invoice` ON `invoice`.`id` = `invoice_item`.`invoice_id` INNER JOIN `product` ON `product`.`id` = `invoice_item`.`product_id` "
                    + "WHERE `invoice`.`date` = '" + formattedTodayDate + "' GROUP BY `product_id` ORDER BY `total_sold` DESC LIMIT 1;");

            if (resultSet.next()) {

                todayMostSellingProduct = resultSet.getString("name");

                if (todayMostSellingProduct == null) {
                    todayMostSellingProduct = "empty";
                }

            } else {

                todayMostSellingProduct = "empty";

            }

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.MONTH, -1);
            Date beforeDate = cal.getTime();

            String formattedBeforeDate = sdf.format(beforeDate);

            ResultSet resultSet1 = MySQL.executeSearch("SELECT `name`, `product_id`, SUM(`qty`) AS `total_sold` FROM `invoice_item` "
                    + "INNER JOIN `invoice` ON `invoice`.`id` = `invoice_item`.`invoice_id` INNER JOIN `product` ON `product`.`id` = `invoice_item`.`product_id` "
                    + "WHERE `invoice`.`date` BETWEEN '" + formattedBeforeDate + "' AND '" + formattedTodayDate + "' "
                    + "GROUP BY `product_id` ORDER BY `total_sold` DESC LIMIT 1;");

            if (resultSet1.next()) {

                monthlyMostSellingProduct = resultSet1.getString("name");

                if (monthlyMostSellingProduct == null) {
                    monthlyMostSellingProduct = "empty";
                }

            } else {

                monthlyMostSellingProduct = "empty";

            }

            ResultSet resultSet2 = MySQL.executeSearch("SELECT SUM(`total`) AS `today_earning` FROM `invoice` WHERE `date` = '" + formattedTodayDate + "'");

            if (resultSet2.next()) {

                todayEarning = resultSet2.getString("today_earning");

                if (todayEarning == null) {
                    todayEarning = "0.0";
                }

            } else {

                todayEarning = "0.0";

            }

            ResultSet resultSet3 = MySQL.executeSearch("SELECT SUM(`total`) AS `monthly_earning` FROM `invoice` WHERE `date` BETWEEN '" + formattedBeforeDate + "' AND '" + formattedTodayDate + "'");

            if (resultSet3.next()) {

                monthlyEarning = resultSet3.getString("monthly_earning");

                if (monthlyEarning == null) {
                    monthlyEarning = "0.0";
                }

            } else {

                monthlyEarning = "0.0";

            }

            ResultSet resultSet4 = MySQL.executeSearch("SELECT `first_name`, `last_name`, `customer_mobile`, COUNT(*) AS `invoice_count` FROM `invoice` INNER JOIN `customer` ON `invoice`.`customer_mobile` = `customer`.`mobile` "
                    + "GROUP BY `customer_mobile` ORDER BY `invoice_count` DESC LIMIT 1");

            if (resultSet4.next()) {

                String firstName = resultSet4.getString("first_name");
                String lastName = resultSet4.getString("last_name");
                mostActiveCustomer = firstName + " " + lastName;

                if (mostActiveCustomer == null) {
                    mostActiveCustomer = "empty";
                }

            } else {

                mostActiveCustomer = "empty";

            }

            String path = "src//reports//Bubble_Bay_Sales_Report.jasper";

            HashMap<String, Object> params = new HashMap<>();
            params.put("Parameter1", todayMostSellingProduct);
            params.put("Parameter2", monthlyMostSellingProduct);
            params.put("Parameter3", String.valueOf("Rs. " + todayEarning));
            params.put("Parameter4", String.valueOf("Rs. " + monthlyEarning));
            params.put("Parameter5", mostActiveCustomer);

            JREmptyDataSource dataSource = new JREmptyDataSource();

            JasperPrint report = JasperFillManager.fillReport(path, params, dataSource);

            JasperViewer viewer = new JasperViewer(report, false);

            viewer.setBounds(2, 20, 800, 500);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);

            String folderPath = "reports//Sales_Report//";
            String fileName = folderPath + formattedTodayDate + "_sales_report.pdf";

            JasperExportManager.exportReportToPdfFile(report, fileName);

        } catch (SQLException e) {
            e.printStackTrace();
            logger.log(Level.WARNING, "Report Generating Error!", e);
        } catch (Exception e) {
            e.printStackTrace();
            logger.log(Level.WARNING, "Report Generating Error!", e);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backLogo1;
    private javax.swing.JLabel back_label1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    // reset filelds
    private void reset() {
        jTextField1.setText("");
        jTextField2.setText("");
    }
}
